# This file is automatically generated by pyo3_stub_gen
# ruff: noqa: E501, F401
from enum import Enum

class Grid:
    ROW_COUNT: int
    COLUMN_COUNT: int
    TOP: int
    BOTTOM: int
    LEFT: int
    RIGHT: int
    NEXT_POS: tuple[float, float, float]
    HOLD_POS: tuple[float, float, float]
    JIGGLE_MOVES: list[int]

    def __new__(cls) -> Grid: ...
    def move(self, x: int, y: int) -> bool: ...
    def rotate(self, angle: Turn) -> bool: ...
    def inplace_collision(self) -> bool: ...
    def update_cells(self): ...
    def process_completed_rows(self) -> int:
        """Check the grid for completed rows. Delete them and move down the others if possible."""

    @property
    def active_tetrimino(self) -> Tetrimino | None: ...
    @active_tetrimino.setter
    def active_tetrimino(self, tetrimino: Tetrimino) -> None: ...

class Tetrimino:
    def __new__(cls, type: TetriminoLetter, root: str, cubes: tuple[str, str, str, str]) -> Tetrimino: ...
    @property
    def root(self) -> str: ...
    @property
    def position(self) -> tuple[float, float]: ...

class TetriminoLetter(Enum):
    T = ...
    O = ...
    L = ...
    J = ...
    Z = ...
    S = ...
    I = ...

class Turn(Enum):
    Left = ...
    Right = ...
