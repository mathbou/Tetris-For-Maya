[build-system]
requires = ["maturin>=1.8,<2.0"]
build-backend = "maturin"

[project]
name = "tetris-maya"
requires-python = ">=3.7,<3.13"
classifiers = [
    "Programming Language :: Rust",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Topic :: Games/Entertainment"
]
dynamic = ["version",  "license", "authors", "urls"]

[project.optional-dependencies]
tests = [
    "pytest",
]
dev = [
    "PySide2==5.15.*;python_version<'3.10'",
    "PySide6==6.6.*;python_version>='3.10'",
    "maya-stubs",
    "setuptools",
]

[tool.maturin]
features = ["pyo3/extension-module", "pyo3/abi3-py37"]
locked = true
python-source = "python"
module-name = "tetris_maya.rlib"

[tool.black]
line-length = 120

[tool.isort]
profile = 'black'
line_length = 120
atomic = true

[tool.ruff]
fix = false
line-length = 120

[tool.ruff.lint]
select = [
#    "AIR", # Airflow             https://docs.astral.sh/ruff/rules/#airflow-air
    "ERA", # eradicate           https://docs.astral.sh/ruff/rules/#eradicate-era
#    "FAST", # FastAPI           https://docs.astral.sh/ruff/rules/#fastapi-fast
    "YTT", # 2020                https://docs.astral.sh/ruff/rules/#flake8-2020-ytt
    "ANN", # annotations         https://docs.astral.sh/ruff/rules/#flake8-annotations-ann
    "ASYNC", # async             https://docs.astral.sh/ruff/rules/#flake8-async-async
    "S", # Bandit                https://docs.astral.sh/ruff/rules/#flake8-bandit-s
    "BLE", # blind-except        https://docs.astral.sh/ruff/rules/#flake8-blind-except-ble
    "FBT003", # boolean-trap        https://docs.astral.sh/ruff/rules/#flake8-boolean-trap-fbt
    "B", # bugbear               https://docs.astral.sh/ruff/rules/#flake8-bugbear-b
    "A", # builtins              https://docs.astral.sh/ruff/rules/#flake8-builtins-a
#    "COM", # commas              https://docs.astral.sh/ruff/rules/#flake8-commas-com
    "C4", # comprehensions       https://docs.astral.sh/ruff/rules/#flake8-comprehensions-c4
#    "CPY", # copyright           https://docs.astral.sh/ruff/rules/#flake8-copyright-cpy
    "DTZ", # datetimez           https://docs.astral.sh/ruff/rules/#flake8-datetimez-dtz
#    "T10", # debugger            https://docs.astral.sh/ruff/rules/#flake8-debugger-t10
#    "DJ", # django               https://docs.astral.sh/ruff/rules/#flake8-django-dj
    "EM", # errmsg               https://docs.astral.sh/ruff/rules/#flake8-errmsg-em
#    "EXE", # executable          https://docs.astral.sh/ruff/rules/#flake8-executable-exe
    "FIX", # fixme               https://docs.astral.sh/ruff/rules/#flake8-fixme-fix
    "FA", # future-annotations   https://docs.astral.sh/ruff/rules/#flake8-future-annotations-fa
#    "INT", # gettext             https://docs.astral.sh/ruff/rules/#flake8-gettext-int
    "ISC", # implicit-str-concat https://docs.astral.sh/ruff/rules/#flake8-implicit-str-concat-isc
    "ICN", # import-conventions  https://docs.astral.sh/ruff/rules/#flake8-import-conventions-icn
    "LOG", # logging             https://docs.astral.sh/ruff/rules/#flake8-logging-log
    "G", # logging-format        https://docs.astral.sh/ruff/rules/#flake8-logging-format-g
#    "INP", # no-pep420           https://docs.astral.sh/ruff/rules/#flake8-no-pep420-inp
    "PIE", # flake8-pie          https://docs.astral.sh/ruff/rules/#flake8-pie-pie
    "T20", # print               https://docs.astral.sh/ruff/rules/#flake8-print-t20
#    "PIY", # pyi                 https://docs.astral.sh/ruff/rules/#flake8-pyi-pyi
#    "PT", # pytest-style         https://docs.astral.sh/ruff/rules/#flake8-pytest-style-pt
#    "Q", # quotes                https://docs.astral.sh/ruff/rules/#flake8-quotes-q
    "RSE", # raise               https://docs.astral.sh/ruff/rules/#flake8-raise-rse
    "RET", # return              https://docs.astral.sh/ruff/rules/#flake8-return-ret
    "SLF", # self                https://docs.astral.sh/ruff/rules/#flake8-self-slf
    "SIM", # Simplify            https://docs.astral.sh/ruff/rules/#flake8-simplify-sim
    "SLOT", # slots              https://docs.astral.sh/ruff/rules/#flake8-slots-slot
#    "TID", # tidy-imports        https://docs.astral.sh/ruff/rules/#flake8-tidy-imports-tid
#    "TD", # todos                https://docs.astral.sh/ruff/rules/#flake8-todos-td
    "TC", # type-checking       https://docs.astral.sh/ruff/rules/#flake8-type-checking-tc
    "ARG", # unused-arguments    https://docs.astral.sh/ruff/rules/#flake8-unused-arguments-arg
    "PTH", # pathlib             https://docs.astral.sh/ruff/rules/#flake8-use-pathlib-pth
    "FLY", # flynt               https://docs.astral.sh/ruff/rules/#flynt-fly
#    "I", # Isort                 https://docs.astral.sh/ruff/rules/#isort-i
    "C90", # McCabe              https://docs.astral.sh/ruff/rules/#mccabe-c90
#    "NPY", # NumPy               https://docs.astral.sh/ruff/rules/#numpy-specific-rules-npy
#    "PD", # pandas-vet           https://docs.astral.sh/ruff/rules/#pandas-vet-pd
    "N", # PEP8-Naming           https://docs.astral.sh/ruff/rules/#pep8-naming-n
    "PERF", # Perflint           https://docs.astral.sh/ruff/rules/#perflint-perf
#    "E", # PyCodeStyle           https://docs.astral.sh/ruff/rules/#pycodestyle-e-w
#    "W", # PyCodeStyle           https://docs.astral.sh/ruff/rules/#pycodestyle-e-w
    "DOC", # PyDocLint           https://docs.astral.sh/ruff/rules/#pydoclint-doc
    "D", # PyDocStyle            https://docs.astral.sh/ruff/rules/#pydocstyle-d
    "F", # Pyflakes              https://docs.astral.sh/ruff/rules/#pyflakes-f
    "PGH004", # pygrep-hooks        https://docs.astral.sh/ruff/rules/#pygrep-hooks-pgh
    "PL", # Pylint               https://docs.astral.sh/ruff/rules/#pylint-pl
    "UP", # PyUpgrade            https://docs.astral.sh/ruff/rules/#pyupgrade-up
    "FURB", # Refurb             https://docs.astral.sh/ruff/rules/#refurb-furb
    "RUF", # Ruff                https://docs.astral.sh/ruff/rules/#ruff-specific-rules-ruf
    "TRY", # tryceratops         https://docs.astral.sh/ruff/rules/#tryceratops-try

]
ignore = [
    # https://docs.astral.sh/ruff/rules/#flake8-annotations-ann
    "ANN002",
    "ANN401",
    # https://docs.astral.sh/ruff/rules/#flake8-bandit-s
    "S603",
    # https://docs.astral.sh/ruff/rules/raw-string-in-exception/
    "EM101",
    # https://docs.astral.sh/ruff/rules/line-contains-todo/
    "FIX002",
    # https://docs.astral.sh/ruff/rules/#pydocstyle-d
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
    "D205",
    "D400",
    "D412",
    "D415",
    "D417",
    # https://docs.astral.sh/ruff/rules/#pylint-pl
    "PLC0414",
    "PLR0402",
    "PLR0904",
    "PLR0914",
    "PLR6301",
    # https://docs.astral.sh/ruff/rules/#tryceratops-try
    "TRY003",
]
unfixable = [
    # https://docs.astral.sh/ruff/rules/#eradicate-era
    "ERA",
    # https://docs.astral.sh/ruff/rules/#flake8-print-t20
    "T201",
    "T203",
    # https://docs.astral.sh/ruff/rules/#ruff-specific-rules-ruf
    "RUF100",
]

[tool.ruff.lint.flake8-unused-arguments]
ignore-variadic-names = true

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true
suppress-dummy-args = true
mypy-init-return = true
suppress-none-returning = true

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["id", "type"]

[tool.ruff.lint.flake8-import-conventions.extend-aliases]
"maya.cmds" = "mc"
"maya.mel" = "mel"
"maya.api.OpenMaya" = "om"
"maya.api.OpenMayaAnim" = "oma"
"maya.api.OpenMayaUI" = "omui"
"maya.api.OpenMayaRender" = "omr"
"maya.OpenMaya" = "OpenMaya"
"maya.OpenMayaAnim" = "OpenMayaAnim"
"maya.OpenMayaUI" = "OpenMayaUI"
"maya.OpenMayaMPx" = "OpenMayaMPx"
"pymel.core" = "pm"

[tool.ruff.lint.pylint]
max-args = 8
max-statements = 200

[tool.ruff.lint.flake8-type-checking]
strict = true

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pydocstyle]
convention = "google"